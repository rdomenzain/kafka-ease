{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kafka Ease","text":"<p>Automating the creation of topics and ACLs is a common task for Kafka administrators. This repository contains a set of utilities to automate these tasks.</p> <ul> <li>Create a topic with a given number of partitions and replication factor</li> <li>Create ACLs</li> </ul> <p>Check the documentation for more information.</p>"},{"location":"getting-started/","title":"Installation","text":""},{"location":"getting-started/#requirementstxt","title":"requirements.txt","text":"<p>To install the library from the GitLab package registry, write the following lines in the file <code>requirements.txt</code>:</p> <pre><code>kafka-ease\n</code></pre>"},{"location":"getting-started/#pip-install","title":"Pip install","text":"<p>To install the library, run the following command:</p> <pre><code>pip install kafka-ease\n</code></pre> <p>See Kafka Ease for more information.</p>"},{"location":"getting-started/configuration/","title":"Configuration","text":""},{"location":"getting-started/configuration/#file-format","title":"File format","text":"<p>The file format is YAML or JSON. The file must contain a list of topics and a list of ACLs.</p> <ul> <li>YAML example:</li> </ul> acl.yaml<pre><code>topics:\n- name: topic.name\nnum_partitions: 1\nreplication_factor: 1\ncleanup_policy: delete\nretention_days: 7\nacls:\n- resource_type: TOPIC\nresource_name: topic.name\nprincipal: User:kafka-user\nhost: \"*\"\noperation: READ\npermission_type: ALLOW\npattern_type: LITERAL\n</code></pre> <ul> <li>JSON example:</li> </ul> acl.json<pre><code>{\n\"topics\": [\n{\n\"name\": \"topic.name\",\n\"num_partitions\": 1,\n\"replication_factor\": 1,\n\"cleanup_policy\": \"delete\",\n\"retention_days\": 7\n}\n],\n\"acls\": [\n{\n\"resource_type\": \"TOPIC\",\n\"resource_name\": \"topic.name\",\n\"principal\": \"User:kafka-user\",\n\"host\": \"*\",\n\"operation\": \"READ\",\n\"permission_type\": \"ALLOW\",\n\"pattern_type\": \"LITERAL\"\n}\n]\n}\n</code></pre>"},{"location":"getting-started/configuration/#schema-definition","title":"Schema definition","text":"<ul> <li> <p>Topics</p> <ul> <li>name: Topic name</li> <li>num_partitions: Number of partitions</li> <li>replication_factor: Replication factor</li> <li>cleanup_policy: Cleanup policy (<code>delete</code>, <code>compact</code>)</li> <li>retention_days: Delete retention days</li> </ul> </li> <li> <p>ACLs</p> <ul> <li>resource_type: Resource type (<code>UNKNOWN</code>, <code>ANY</code>, <code>CLUSTER</code>, <code>TOPIC</code>, <code>DELEGATION_TOKEN</code>, <code>GROUP</code>, <code>TRANSACTIONAL_ID</code>)</li> <li>resource_name: Resource name</li> <li>principal: Principal (<code>User:</code>, <code>Group:</code>)</li> <li>host: Host (<code>*</code>)</li> <li>operation: Operation (<code>ANY</code>, <code>ALL</code>, <code>READ</code>, <code>WRITE</code>, <code>CREATE</code>, <code>DELETE</code>, <code>ALTER</code>, <code>DESCRIBE</code>, <code>CLUSTER_ACTION</code>, <code>DESCRIBE_CONFIGS</code>, <code>ALTER_CONFIGS</code>, <code>IDEMPOTENT_WRITE</code>)</li> <li>permission_type: Permission type (<code>ANY</code>, <code>DENY</code>, <code>ALLOW</code>)</li> <li>pattern_type: Pattern type (<code>ANY</code>, <code>MATCH</code>, <code>LITERAL</code>, <code>PREFIXED</code>)</li> </ul> </li> </ul>"},{"location":"getting-started/how-to-use/","title":"How to use","text":""},{"location":"getting-started/how-to-use/#validate-configuration","title":"Validate configuration","text":"<pre><code>kafka-ease apply -f acl.yaml --only-validate\n</code></pre> <p>Expected output:</p> <pre><code>Validating file acl.yaml...\nFile: acl.yaml\nYAML file detected\n2 topics found.\n2 ACLs found.\nFile acl.yaml is valid.\n</code></pre>"},{"location":"getting-started/how-to-use/#apply-configuration","title":"Apply configuration","text":"<pre><code>kafka-ease apply -f acl.yaml \\\n--kafka-brokers kafka:9093 \\\n--security-protocol SASL_PLAINTEXT \\ \n--sasl-mechanism SCRAM-SHA-256 \\\n--sasl-username kafka-admin \\\n--sasl-password SECRET\n</code></pre> <p>Expected output:</p> <pre><code>Applying file...\nKafka brokers: kafka:9093\nSecurity protocol: SASL_PLAINTEXT\nSASL mechanism: SCRAM-SHA-256\nSASL username: kafka-admin\nSASL password: ***************\nFile: acl.yaml\nYAML file detected\n1 topics found.\n1 ACLs found.\nTopic topic.name updated\nRemoving old ACLs 3\nACL User:kafka-user synced\nFile synced successfully.\n</code></pre>"},{"location":"getting-started/how-to-use/#help","title":"Help","text":"<pre><code>kafka-ease apply --help\n</code></pre> <p>Expected output:</p> <pre><code>Usage: kafka-ease apply [OPTIONS]\n\n  Apply configuration file with topics and ACL to Kafka.\n\nOptions:\n  --kafka-brokers TEXT            Kafka server to connect to use.\n  --security-protocol [PLAINTEXT|SASL_PLAINTEXT]\n                                  Kafka Security protocol to use.\n  --sasl-mechanism [PLAIN|SCRAM-SHA-256|SCRAM-SHA-512]\n                                  SASL mechanism to use.\n  --sasl-username TEXT            SASL username to use.\n  --sasl-password TEXT            SASL password to use.\n  -f, --file TEXT                 File path to validate\n  --only-validate                 Only validate the file\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"getting-started/how-to-use/#use-environment-variables","title":"Use environment variables","text":"<p>Use environment variables to avoid passing the same parameters every time.</p> <pre><code>export KAFKA_BROKERS=kafka:9093\nexport KAFKA_SECURITY_PROTOCOL=SASL_PLAINTEXT\nexport KAFKA_SASL_MECHANISM=SCRAM-SHA-256\nexport KAFKA_SASL_USERNAME=kafka-admin\nexport KAFKA_SASL_PASSWORD=SECRET\n\nkafka-ease apply -f acl.yaml\n</code></pre>"},{"location":"use-cases/","title":"CI/CD","text":"<p>This tool has several uses. Either for manual execution via the command line or even using the library in another Python project.</p> <p>But the idea is to automate these tasks, CI/CD helps automate them. A repository on GitHub or Gitlab with .yaml or .json configuration files is a real use case.</p> <p>You can define rules for the execution of these tasks using merge requests.</p> <ol> <li>Open Merge Request: File Validation</li> <li>Merge: Apply changes to Kafka</li> </ol> <p>Note</p> <p>The following examples are for GitLab CI/CD and GitHub Actions. But you can use any CI/CD tool.</p>"},{"location":"use-cases/#gitlab-cicd","title":"GitLab CI/CD","text":".gitlab-ci.yml<pre><code>stages:\n  - validate\n  - sync\n\nkafka-validate:\n  stage: validate\n  image: python:3.9\n  script:\n    - pip install kafka-ease\n    - kafka-ease apply -f ./kafka-init.yml --only-validate\n  rules:\n    - if: $CI_MERGE_REQUEST_ID\n      changes:\n        - ./**/*.{yml}\n\nkafka-sync:\n  stage: sync\n  image: python:3.9\n  script:\n    - pip install kafka-ease\n    - kafka-ease apply -f ./kafka-init.yml\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n      changes:\n        - ./**/*.{yml}\n</code></pre>"},{"location":"use-cases/#github-actions","title":"GitHub Actions","text":".github/workflows/main.yml<pre><code>name: Kafka CI/CD\n\non:\n  pull_request:\n    paths:\n      - '**/*.yml'\n  push:\n    branches:\n      - main # Change this to your GitHub default branch name if different\n\njobs:\n  kafka-validate:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n\n    - name: Set up Python 3.9\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.9\n\n    - name: Install kafka-ease\n      run: pip install kafka-ease\n\n    - name: Validate Kafka configuration\n      run: kafka-ease apply -f ./kafka-init.yml --only-validate\n\n    if: github.event_name == 'pull_request'\n\n  kafka-sync:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n\n    - name: Set up Python 3.9\n      uses: actions/setup-python@v2\n      with:\n        python-version: 3.9\n\n    - name: Install kafka-ease\n      run: pip install kafka-ease\n\n    - name: Sync Kafka configuration\n      run: kafka-ease apply -f ./kafka-init.yml\n\n    if: github.event_name == 'push' &amp;&amp; github.ref == 'refs/heads/main' # Adjust the branch here as well\n</code></pre> <p>Warning</p> <p>These examples use environment variables for greater security.</p>"}]}